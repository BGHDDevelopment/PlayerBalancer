# LobbyBalancer Configuration (https://www.spigotmc.org/resources/10788/)
# Read the comments, they are a very important part of the configuration
# To get support send me a private message with a description of the problem and the config file
# To easily paste the config file (and other relevant files) use the command /balancer paste

general {
  # IMPORTANT! Set this to true after configuring the plugin!
  enabled=false

  # When true, the plugin will check for new servers added to bungee
  auto-refresh=false

  # When true, the plugin will reload when you execute /greload
  auto-reload=true

  # When true, the plugin will get player counts from RedisBungee
  redis-bungee=false

  # When true, the plugin will print less messages while loading
  silent=false

  # Do not modify this
  version: "${project.version}"
}

# Effectively remove (i.e comment) a message to disable it
# Supported variables are shown in the default messages
messages {
  connected-server="&aConnected to {server}"
  connecting-server="&aConnecting to a {section} server"
  invalid-input="&cThis is an invalid input type for this command"
  misc-failure="&cCould not find a server to get connected to"
  player-bypass="&cYou have not been moved because you have the playerbalancer.bypass permission"
  player-kicked="&cYou have been kicked from &a{from} &cand you are being moved to &a{to}, reason: &a{reason}"
  same-section="&cYou are already connected to a server on this section!"
  unavailable-server="&cThis command cannot be executed on this server"
  unknown-section="&aCould not find a section with that name"
}

features {
  balancer {
    # The principal section is very important for other features
    # Normally set this to the section that has your main lobbies
    principal-section=test

    # When a player is not in any section, the player will go to the principal section
    # This affects both the fallback command and kick handler features
    fallback-principal=true

    # Dummy sections can have servers from other non-dummy sections
    # When a player connects to a dummy section, nothing will happen
    dummy-sections=[]

    # Reiterative sections remember the server the player connected to previously
    # The plugin will keep connecting the player to that server until changes
    reiterative-sections=[]

    sections {
      auth-lobbies {
        provider=RANDOM
        servers=[
          "Auth1",
          "Auth2",
          "Auth3"
        ]
      }

      general-lobbies {
        parent="auth-lobbies"
        provider=RANDOM
        servers=[
          "Lobby1",
          "Lobby2",
          "Lobby3"
        ]
      }

      skywars-lobbies {
        parent="general-lobbies"
        provider=LOWEST
        servers=[
          "SWLobby1",
          "SWLobby2",
          "SWLobby3"
        ]
      }

      skywars-games {
        parent="skywars-lobbies"
        provider=FILLER
        servers=[
          "SW_A1", "SW_A2", "SW_A3", "SW_A4", "SW_A5",
          "SW_B1", "SW_B2", "SW_B3", "SW_B4", "SW_B5"
        ]
        section-server=playskywars
        section-command {
          name=skywars
          permission=""
          aliases=[]
        }
      }
    }
  }

  # Connects a player to the parent of current section the player is connected to
  fallback-command {
    enabled=true

    command {
      name=fallback
      permission=""
      aliases=[
        lobby,
        hub,
        back
      ]
    }

    # Add sections here where you do not want this feature to work
    excluded-sections=[]

    # When true, players will not be able to get to a section
    restrictive=true

    # You can override the behavior with rules, overriding the parent section
    # This will set the section to go when you come from the section specified
    rules {
      section-from=section-to
    }
  }


  server-checker {
    enabled=true

    tactic=CUSTOM

    attempts=5

    debug-info=false

    interval=10000

    marker-descs=[
      "Server is not accessible",
      "Gamemode has already started"
    ]
  }

  # Connects a player to other section when kicked
  kick-handler {
    enabled=true

    inverted=true

    reasons=[]

    force-principal=false

    # Add sections here where you do not want this feature to work
    excluded-sections=[]

    restrictive=true

    # When true, the plugin will print useful info when a player gets kicked
    debug-info=false

    # You can override the behavior with rules, overriding the parent section
    # This will set the section to go when you come from the section specified
    rules {
      section-from=section-to
    }
  }
}
