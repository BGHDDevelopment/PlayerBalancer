# PlayerBalancer Configuration (https://www.spigotmc.org/resources/10788/)
# Read the comments, they are a very important part of the configuration
# To get support send me a private message with a description of the problem and the config file
# To easily paste the config file (and other relevant files) use the command /balancer paste
# Remember to set enabled under settings to true

settings:
  # The plugin will be disabled as default
  enabled: false

  # Disable the messages the plugin prints out when loading
  silent-startup: false

  # Pings to the servers to see if they can be accessed or not
  server-check:
    # If this is disabled the players will connect to the first server available
    enabled: true

    # Use either CUSTOM or GENERIC, the first one generally works the best
    tactic: CUSTOM

    # The attempts before giving up on getting a server for a player
    attempts: 5

    # The interval between every round of checks
    interval: 10000

    # This only applies for the custom tactic
    timeout: 5000

    # This prints info every time the plugin checks a server and prints its results
    print-info: false

    # The descriptions that mark a server as non accessible
    marker-descs: ["Server is not accessible", "Gamemode has already started"]

  # This will connect the player to a server of the parent of the section the player is kicked from
  reconnect-kick:
    # If this is enabled the kick reasons must still match for this to work
    enabled: true

    # If enabled, the reasons will work as a blacklist instead of a whitelist
    inverted: false

    # The reasons that determine if a player is reconnected or not, supports regex
    reasons: []

    # Sections where this feature is ignored
    ignored: []

    # If enabled, players will not be able to get back to any server in a section that is parent of the principal section
    restricted: true

    # This will make it so that the server the player is kicked from will be excluded
    exclude-from: true

    # If enabled, players that are kicked while connecting to the proxy will be forced to reconnect to the principal section
    force-principal: false

    # This prints info every time a player gets kicked telling you the reason and if it matches the reasons
    print-info: false

    # You can override the behavior with rules, overriding the parent section
    # This will set the section to go when you come from the section specified
    # This will still require the kick reasons to match
    rules:
      'section-from': 'section-to'

  # This will connect the player to a server of the parent of the section the player is currently on
  fallback-command:
    # If this is disabled the command will not be registered
    enabled: true

    # The name of the command, make sure it does not interfere with other commands
    name: 'fallback'

    # The aliases of the command, make sure it does not interfere with other commands
    aliases: ['lobby', 'hub', 'back']

    # Leave this empty for no permission
    permission: ''

    # Sections where this command is ignored
    ignored: []

    # If enabled, players will not be able to get back to any server in a section that is parent of the principal section
    restricted: true

    # You can override the behavior with rules, overriding the parent section
    # This will set the section to go when you come from the section specified
    rules:
      'section-from': 'section-to'

  # This will reload the plugin every time you execute /greload
  auto-reload: true

  # Support for getting the players connected to a server with RedisBungee
  redis-bungee: false

  # Assign a target to a player instead of looking every time for one
  # This is reset every time the player disconnects
  assign-targets: false

  # When a player is not in any section, the player will go to the principal section
  # This affects both the fallback command and reconnect kick features
  fallback-principal: true

  # This will update the recognized servers every minute
  servers-update: false

  # Comment a message to disable it
  messages:
    # connecting-server: '&aConnecting to a {section} server'
    connected-server: '&aConnected to {server}'
    misc-failure: '&cCould not find a server to get connected'
    unknown-section: '&cCould not find a section with that name'
    invalid-input: '&cThis is an invalid input type for this command'
    unavailable-server: '&cThis command cannot be executed on this server'
    player-kicked: '&cYou have been kicked from &a{from} &cand you are being moved to &a{to}&c, reason: &a{reason}'
    player-bypass: '&cYou have not been moved because you have the playerbalancer.bypass permission'

# Here you have an example of what you can do with the sections
# The plugin will print out info telling you if your config is right or not
# If a section does not have a provider it will be inherit from the parent
# The best way to understand this is to play around with it
# You can use regex to match a set of servers instead of adding each server

# Providers you can use in the sections
#  NONE: Does not return a server, effectively disables the section
#  LOWEST: Returns the first server found that has least players online
#  RANDOM: Returns a random server based on a computer generated number
#  PROGRESSIVE: Returns the first server found that is not full
#  FILLER: Returns the first server found with the most players online and not full

sections:
  auth-lobbies:
    provider: RANDOM
    servers: ["Auth1", "Auth2", "Auth3"]
  general-lobbies:
    parent: 'auth-lobbies'
    principal: true # Cannot get above the principal section
    provider: RANDOM
    servers: ["Lobby1", "Lobby2", "Lobby3"]
  skywars-lobbies:
    parent: 'general-lobbies'
    parent: LOWEST
    servers: ["SWLobby1", "SWLobby2", "SWLobby3"]
  skywars-games:
    provider: FILLER
    parent: 'skywars-lobbies'
    servers: [
      "SW_A1", "SW_A2", "SW_A3", "SW_A4", "SW_A5",
      "SW_B1", "SW_B2", "SW_B3", "SW_B4", "SW_B5"
    ]
    section-server: 'randomskywars' # Creates a fake server you can use, ex: @randomskywars
    section-command:
      name: 'playskywars'
      permission: ''
      aliases: ["skywars"]
  skywars-typea:
    dummy: true # Use servers already registered on skywars-games
    parent: 'skywars-lobbies'
    servers: ["SW_A1", "SW_A2", "SW_A3", "SW_A4", "SW_A5"]
    section-server: 'skywarstypea'
  skywars-typeb:
    dummy: true
    parent: 'skywars-lobbies'
    servers: ["SW_B1", "SW_B2", "SW_B3", "SW_B4", "SW_B5"]
    section-server: 'skywarstypeb'

# Do not modify this
version: '${project.version}'
